<?php

namespace App\Exports;

use App\Models\Contractor;
use Illuminate\Http\Request;
use Illuminate\Support\Carbon;
use Maatwebsite\Excel\Concerns\FromCollection;
use Illuminate\Support\Collection;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Events\AfterSheet;
use PhpOffice\PhpSpreadsheet\Worksheet\Drawing;

class ReportCertExport implements FromCollection, WithEvents
{
    /**
    * @return \Illuminate\Support\Collection
    */
    protected $results;
    protected $info;

    public function __construct($results,$info)
    {
        $this->results = $results;
        $this->info = $info;
    }

    public function collection()
    {

        $result = new Collection($this->results);

        return $result;
    }

    public function registerEvents(): array
    {
        return [
            AfterSheet::class => function(AfterSheet $event) {

                $event->sheet->getColumnDimension('A')->setWidth(10);
                $event->sheet->getColumnDimension('B')->setWidth(40);
                $event->sheet->getColumnDimension('C')->setWidth(20);
                $event->sheet->getColumnDimension('D')->setWidth(30);
                $event->sheet->getColumnDimension('E')->setWidth(30);
                $event->sheet->getColumnDimension('F')->setWidth(40);
                $event->sheet->getColumnDimension('G')->setWidth(40);
                $event->sheet->getColumnDimension('H')->setWidth(40);
                $event->sheet->getColumnDimension('I')->setWidth(30);
                $event->sheet->getColumnDimension('J')->setWidth(30);

                $event->sheet->mergeCells('A1:J1');
                $event->sheet->getStyle('A1')->getAlignment()->setHorizontal('right');
                $event->sheet->setCellValue('A1', 'Generated By: '.$this->info['generatedBy']);

                $event->sheet->mergeCells('A2:J2');
                $event->sheet->getStyle('A2')->getAlignment()->setHorizontal('right');
                $event->sheet->setCellValue('A2', 'Generated Date: '.$this->info['dateNow']);

                $event->sheet->mergeCells('A3:J3');
                $event->sheet->getStyle('A3')->getAlignment()->setHorizontal('right');
                $event->sheet->setCellValue('A3', 'Generated Time: '.$this->info['timeNow']);

                $event->sheet->mergeCells('A4:J4');
                $event->sheet->getStyle('A4')->getAlignment()->setHorizontal('center');
                $event->sheet->getStyle('A4')->getFont()->setBold(true);
                $event->sheet->setCellValue('A4', 'Certificate Report');

                $event->sheet->setCellValue('A5', 'No.');
                $event->sheet->setCellValue('B5', 'Project');
                $event->sheet->setCellValue('C5', 'Certificate No.');
                $event->sheet->setCellValue('D5', 'ID/Register No.');
                $event->sheet->setCellValue('E5', 'Subscriber Name');
                $event->sheet->setCellValue('F5', 'Issuance Cert. Date');
                $event->sheet->setCellValue('G5', 'Valid Date');
                $event->sheet->setCellValue('H5', 'Validility Days');
                $event->sheet->setCellValue('I5', 'Revoked Date');
                $event->sheet->setCellValue('J5', 'Status');
                
                $event->sheet->getStyle('A5:J5')->applyFromArray([
                    'font' => [
                        'bold' => true,
                    ],
                    'borders' => [
                        'allBorders' => [
                            'borderStyle' => \PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN,
                        ],
                    ],
                ]);

                $columns = ['A','B', 'C', 'D', 'E', 'F','G','H','I','J'];
                foreach ($columns as $column) {
                    $event->sheet->getStyle($column . '5')->getAlignment()->setHorizontal('center');
                }
                
                $dataRows = $this->results;
                $startingRow = 6;
                $currentRow = $startingRow;
                $count = 1;

                foreach ($dataRows as $dataRow) {

                    $event->sheet->setCellValueExplicit('A' . $currentRow, $count, \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('B' . $currentRow, $dataRow['project'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('C' . $currentRow, $dataRow['CENo'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('D' . $currentRow, $dataRow['CEIDNo'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('E' . $currentRow, $dataRow['CEName'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('F' . $currentRow, $dataRow['CECD'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('G' . $currentRow, $dataRow['CEEndDate'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('H' . $currentRow, $dataRow['validDay'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('I' . $currentRow, $dataRow['CERevokeDate'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);
                    $event->sheet->setCellValueExplicit('J' . $currentRow, $dataRow['status'], \PhpOffice\PhpSpreadsheet\Cell\DataType::TYPE_STRING);

                    $currentRow++;
                    $count++;
                }

                $highestRow = $event->sheet->getHighestRow();
                $highestColumn = $event->sheet->getHighestColumn();
                $range = 'A5:' . $highestColumn . $highestRow;

                $event->sheet->getStyle($range)->getAlignment()->setHorizontal('center');

                $event->sheet->getStyle($range)->applyFromArray([
                    'borders' => [
                        'allBorders' => [
                            'borderStyle' => \PhpOffice\PhpSpreadsheet\Style\Border::BORDER_THIN,
                        ],
                    ],
                ]);
                
            },
        ];
    }

}
